:root {
  /* Dimensions */
  --cube-size: 150px;
  --circle-size: 200px;
  --circle-inner-size: calc(var(--circle-size) / 2);

  /* Transforms */
  --perspective: 6000px;
  --translateZ-half: calc(var(--cube-size) / 2);
  --translateZ-full: var(--cube-size);
  --circle-translateZ: calc(var(--circle-size) / 2 - 10px);
  --rotateX: 90deg;
  --rotateY: 90deg;
  --animation-rotateX: -14deg;

  /* Colors */
  --bg-color: hsl(224, 32%, 12%);
  --gradient-start: blue;
  --gradient-mid: purple;
  --box-shadow-color: #3cf;

  /* Box shadow */
  --glow: 0 0 2px 2px var(--box-shadow-color);
}

body {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  background: var(--bg-color);
  background-image: conic-gradient(
    from 0deg at 50% 50%,
    var(--gradient-start),
    var(--gradient-mid),
    var(--gradient-mid),
    var(--gradient-start)
  );
  background-blend-mode: multiply;
  min-block-size: 100dvh;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  place-items: center;
  user-select: none;
}

.cube {
  position: relative;
  display: grid;
  place-items: center;
  transform-style: preserve-3d;
  animation: autoRun 10s linear infinite;
}

.side {
  width: var(--cube-size);
  height: var(--cube-size);
  position: absolute;
  background: transparent;
  transform-style: preserve-3d;
  box-shadow: var(--glow);
}

.side::after,
.side::before {
  content: "";
  position: absolute;
  inset: 0;
  background: transparent;
  box-shadow: var(--glow);
}

.side1 {
  transform: perspective(var(--perspective)) translateZ(var(--translateZ-half));
}

.side1::after {
  transform: translateZ(calc(-1 * var(--translateZ-full)));
}

.side2 {
  transform: perspective(var(--perspective)) rotateY(var(--rotateY))
    translateZ(var(--translateZ-half));
}

.side2::after {
  transform: translateZ(calc(-1 * var(--translateZ-full)));
}

.side3 {
  transform: perspective(var(--perspective)) rotateX(var(--rotateX))
    translateZ(calc(-1 * var(--translateZ-half)));
}

.side3::after {
  transform: translateZ(var(--translateZ-full));
}

.sphere {
  display: grid;
  place-items: center;
  transform-style: preserve-3d;
  animation: autoRun 10s linear infinite reverse;
}

.circle {
  width: var(--circle-size);
  height: var(--circle-size);
  border-radius: 100vh;
  position: absolute;
  background: transparent;
  transform-style: preserve-3d;
  box-shadow: var(--glow);
}

.circle::after,
.circle::before {
  content: "";
  width: var(--circle-inner-size);
  height: var(--circle-inner-size);
  position: absolute;
  top: 0;
  left: 0;
  background: transparent;
  border-radius: 100vh;
  box-shadow: var(--glow);
}

.circle1::after {
  transform: translateX(50%) translateY(50%)
    translateZ(var(--circle-translateZ));
}
.circle1::before {
  transform: translateX(50%) translateY(50%)
    translateZ(calc(-1 * var(--circle-translateZ)));
}

.circle2 {
  transform: rotateY(var(--rotateY));
}
.circle2::after {
  transform: translateX(50%) translateY(50%)
    translateZ(var(--circle-translateZ));
}
.circle2::before {
  transform: translateX(50%) translateY(50%)
    translateZ(calc(-1 * var(--circle-translateZ)));
}

.circle3 {
  transform: rotateX(var(--rotateX));
}
.circle3::after {
  transform: translateX(50%) translateY(50%)
    translateZ(var(--circle-translateZ));
}
.circle3::before {
  transform: translateX(50%) translateY(50%)
    translateZ(calc(-1 * var(--circle-translateZ)));
}

@keyframes autoRun {
  from {
    transform: perspective(1000px) rotateX(var(--animation-rotateX))
      rotateY(0deg) rotateZ(0);
  }
  to {
    transform: perspective(1000px) rotateX(var(--animation-rotateX))
      rotateY(360deg) rotateZ(360deg);
  }
}
